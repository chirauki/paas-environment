---
- name: Install MariaDB
  yum: name={{ item }} state=present
  with_items:
    - MariaDB-server
    - MariaDB-client
    - MySQL-python

- name: Enable MariaDB service
  service: name=mysql enabled=yes

- name: Create MariaDB root PW file
  copy:
    dest: /root/.mysql_pw
    content: |
      GRANT ALL PRIVILEGES TO root@'localhost' IDENTIFIED BY '{{ mariadb_root_password }}' WITH GRANT OPTION;
      GRANT ALL PRIVILEGES TO root@'%' IDENTIFIED BY '{{ mariadb_root_password }}' WITH GRANT OPTION;
  register: pwfile

- name: Reset MariaDB password
  block:
    - name: Install requirements
      yum: name=MySQL-python state=present

    - name: Stop MariaDB
      service: name=mysql state=stopped

    - name: Start with skip grants
      shell: nohup mysqld_safe --skip-grant-tables &

    - name: Change root pass
      mysql_db:
        name: mysql
        state: import
        target: /root/.mysql_pw
        login_user: root
        login_password: ''

    - name: Restart MariaDB
      service: name=mysql state=restarted
  when: pwfile.changed

- name: "MariaDB configuration file {{ item.key }}.cnf"
  template:
    src: cnf.j2
    dest: /etc/my.cnf.d/{{ item.key }}.cnf
  with_dict: "{{ default_mariadb_config | combine(mariadb_config) }}"

- name: Ensure /var/log/mysql folder exists
  file:
    path: /var/log/mysql
    owner: mysql
    group: mysql
    state: directory

- name: Start Galera
  block:
    # TODO
    # Add logic to check if Galera needs bootstrap
    - name: Stop Galera
      service: name=mysql state=stopped

    - name: Start Galera bootstrap
      shell: galera_new_cluster
  when: cluster_master_address == ansible_default_ipv4.address

- name: Start Galera
  service: name=mysql state=started enabled=yes
  when: cluster_master_address == ansible_default_ipv4.address

- name: Allow root connections from remote
  mysql_user:
    name: root
    password: ""
    host: "%"
    priv: "*.*:ALL,GRANT"
  when: abiquo_db_user is defined
