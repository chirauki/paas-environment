---
- hosts: localhost
  connection: local
  gather_facts: False
  tasks:
    - name: Get vars
      include_vars: vars.yml

    - name: Locate VPC
      ec2_vpc_net:
        name: "{{ vpc_name }}"
        cidr_block: "{{ vpc_cidr }}"
        region: "{{ vpc_region }}"
      register: vpc

    - name: Locate private networks
      ec2_vpc_subnet:
        vpc_id: "{{ vpc.vpc.id }}"
        region: "{{ vpc_region }}"
        cidr: "{{ item.value }}"
        resource_tags:
          Name: "{{ item.key }}_subnet"
      register: internal_subnets
      with_dict: "{{ internal_networks }}"

    - set_fact:
        db_net: "{{ (internal_subnets.results|selectattr('item.key', 'match', 'db')|list)[0] }}"

    - name: Deploy Monitoring nodes VM
      ec2:
        key_name: "{{ ssh_key_name }}"
        instance_type: "{{ monitoring_instance_type }}"
        image: "{{ monitoring_image_id }}"
        wait: yes
        group: monitoring
        vpc_subnet_id: "{{ db_net.subnet.id }}"
        region: "{{ vpc_region }}"
        exact_count: "{{ monitoring_count }}"
        count_tag:
          type: monitoring
        instance_tags:
          type: monitoring
          Name: monitoring
        volumes:
          - device_name: /dev/sda1
            volume_type: gp2
            volume_size: 10
            delete_on_termination: yes
      register: monitoring_nodes

    - name: Address of the monitoring nodes
      debug:
        msg: "{{ item.private_dns_name }} ({{ item.private_ip }})"
      with_items: "{{ monitoring_nodes.tagged_instances }}"

    - name: Add new instances to host group
      add_host:
        hostname: "{{ item.private_ip }}"
        groupname: monitoring
        ansible_ssh_user: centos
        ansible_become: yes
      with_items: "{{ monitoring_nodes.tagged_instances }}"

    - name: Wait for SSH to come up
      wait_for:
        host: "{{ item.private_ip }}"
        port: 22
        delay: 10
        timeout: 320
        state: started
      with_items: "{{ monitoring_nodes.tagged_instances }}"
